class Main {
	public static void main(String[] args) {

		계산기.더한결과를_화면에_출력(10, 20);
		// 계산기를 조종할수 있는 더한결과를_화면에_출력이라는 리모컨을 실행한다
		// 괄호 안에 있는것은 인자 값이며 아래의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		// 출력 => 결과 : 30

		계산기.더한결과를_화면에_출력(50, 20);
		// 계산기를 조종할수 있는 더한결과를_화면에_출력이라는 리모컨을 실행한다
		// 괄호 안에 있는것은 인자 값이며 아래의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		// 출력 => 결과 : 70

		계산기.뺀결과를_화면에_출력(50, 20);
		// 계산기를 조종할수 있는 뺀결과를_화면에_출력이라는 리모컨을 실행한다
		// 괄호 안에 있는것은 인자 값이며 아래의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		// 출력 => 결과 : 30

		계산기.뺀결과를_화면에_출력(5, 2);
		// 계산기를 조종할수 있는 뺀결과를_화면에_출력이라는 리모컨을 실행한다
		// 괄호 안에 있는것은 인자 값이며 아래의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		// 출력 => 결과 : 3

		계산기.곱한결과를_화면에_출력(5, 2);
		// 계산기를 조종할수 있는 곱한결과를_화면에_출력이라는 리모컨을 실행한다
		// 괄호 안에 있는것은 인자 값이며 아래의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		// 출력 => 결과 : 10
	}
}

class 계산기 {

	static void 더한결과를_화면에_출력(int i, int j) {
		// static은 정적메서드이며 객체를 생성하지 않고도 사용하게 해준다
		// 괄호 안에 있는것은 인자이며 위의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		System.out.printf("더한결과 : %d\n", i + j);
	}

	public static void 곱한결과를_화면에_출력(int i, int j) {
		// static은 정적메서드이며 객체를 생성하지 않고도 사용하게 해준다
		// 괄호 안에 있는것은 인자이며 위의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		System.out.printf("곱한결과 : %d\n", i * j);
	}

	public static void 뺀결과를_화면에_출력(int i, int j) {
		// static은 정적메서드이며 객체를 생성하지 않고도 사용하게 해준다
		// 괄호 안에 있는것은 인자이며 위의 매서드 안의 인자타입과 일치 해야 하며 순서대로 대입된다
		System.out.printf("뺀결과 : %d\n", i - j);
	}

}
